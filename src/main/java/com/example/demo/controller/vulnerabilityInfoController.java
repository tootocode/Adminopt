package com.example.demo.controller;

import com.example.demo.database.Query.*;
import com.example.demo.database.Record.DatabaseConfig;
import com.example.demo.database.Record.DeviceVulRecord;
import com.example.demo.database.Record.Record;
import com.example.demo.database.Record.RecordFactory;
import com.example.demo.entity.*;
import org.omg.PortableInterceptor.SYSTEM_EXCEPTION;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
@RestController
@CrossOrigin
public class vulnerabilityInfoController {

    @Autowired
    private DatabaseConfig databaseConfig;

    @GetMapping("/getvulnerabilityinfolist")
    public List<vulnerability> getInitdata() throws Exception {
        System.out.println("vulnerabilityInfiController");

        String cmd = "python3.8 /device_add_mysql_with_vul.py";
        Process p= null;
        try {
            p = Runtime.getRuntime().exec(cmd);
            System.out.println(cmd);
            int status = p.waitFor();

        } catch (IOException | InterruptedException e) {
            System.out.println(e);
            e.printStackTrace();
        }
        p.destroy();

        List<vulnerability> list=new ArrayList<>();
        String sql="select * from DeviceVulTable";
        String mysqlPath="jdbc:mysql://"+databaseConfig.getMysqlip()+"/DeviceMark?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true";
        Connection connection= DriverManager.getConnection(mysqlPath,"root","123456");
        vulnerabilityQuery vulnerabilityQuery=new vulnerabilityQuery(connection);
        list=vulnerabilityQuery.queryRecord(sql);
        connection.close();
        System.out.println(sql);
        return list;
//        List<devicetaskInfo> list1=new ArrayList<>();
//        //List<vulnerability> list2=new ArrayList<>();
//        List<vulnerability> list5=new ArrayList<>();
//        List<vulnerabilityInfo> list3=new ArrayList<>();
//        String sql="select * from IOTMark";
//        String mysqlPath="jdbc:mysql://"+databaseConfig.getMysqlip()+"/DeviceMark?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true";
//        Connection connection= DriverManager.getConnection(mysqlPath,"root","123456");
//        devicemarktaskQuery devicemarktaskQuery=new devicemarktaskQuery(connection);
//        list1=devicemarktaskQuery.queryRecord(sql);
//        System.out.println(list1.size());
//        System.out.println(sql);
//        //vulnerabilityInfo v = new vulnerabilityInfo();
//        for (int i=0;i<list1.size();i++) {
//            List<vulnerability> list2=new ArrayList<>();
//            if (list1.get(i).getDevice().equals("")){
//                list1.get(i).setDevice("*-*");
//            }
//            //System.out.println(list1.get(i).getDevice());
//            sql = "select * from Vulinfo where devicetype like '%"+list1.get(i).getDevice()+ "%'";
//            mysqlPath = "jdbc:mysql://" + databaseConfig.getMysqlip() + "/DeviceMark?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true";
//            connection = DriverManager.getConnection(mysqlPath, "root", "123456");
//            vulnerabilityQuery vulnerabilityQuery = new vulnerabilityQuery(connection);
//            list2 = vulnerabilityQuery.queryRecord(sql);
//            //System.out.println(list2.size());
//            //System.out.println(list2.size());
//            connection.close();
//            for (int j = 0; j < list2.size(); j++) {
//                list2.get(j).setTaskname(list1.get(i).getTaskname());
//                list2.get(j).setIp(list1.get(i).getTarget());
//                list2.get(j).setTaskdate(list1.get(i).getPostdate());
//                //vulnerability vul = list2.get(j);
//                //System.out.println(vul.getDevicetype() + " " + vul.getDescription());
//                if (list2.get(j).getDevicetype().contains(" ")){
//                    list2.get(j).setDevicetype(list2.get(j).getDevicetype().split(" ")[0]);
//                    //System.out.println(k+" "+list1.get(i).getDevicetype()+" "+vul.getDevicetype());
//                }
//                //String title = list2.get(j).getTitle();
//                list2.get(j).setTitle(list2.get(j).getTitle().replaceAll("[^\\u4e00-\\u9fa5]", ""));
//                //System.out.println(k+" "+list1.get(i).getDevice()+" "+list2.get(j).getDevicetype());
//                /*if (!list1.get(i).getDevice().toLowerCase().equals(list2.get(j).getDevicetype().toLowerCase())){
//                    list2.remove(list2.get(j));
//                }*/
//                /*if (list2 != null && list2.size() > 0 && j<list2.size()){
//                    if (!list1.get(i).getVendor().toLowerCase().equals(list2.get(j).getVendors().toLowerCase())){
//                        list2.remove(list2.get(j));
//                    }
//                }*/
//            }
//
//            /*for (int j = 0; j < list2.size(); j++) {
//                System.out.println("--"+list1.get(i).getVendor().toLowerCase()+" "+list2.get(j).getVendors());
//                if (!list1.get(i).getVendor().toLowerCase().equals(list2.get(j).getVendors().toLowerCase())){
//                    list2.remove(list2.get(j));
//                }
//
//            }*/
//            if (list2.size()>0){
//                for (int p=0;p<list2.size();p++){
//                    if (list1.get(i).getVendor().toLowerCase().equals(list2.get(p).getVendors().toLowerCase())&&list1.get(i).getDevice().toLowerCase().equals(list2.get(p).getDevicetype().toLowerCase())) {
//                        //list2.get(p).setDevicetype(list1.get(i).getDevice());
//                        list5.add(list2.get(p));
//                    }
//                    //System.out.println(k+" "+list2.get(p).getDevicetype());
//                }
//            }
//            //System.out.println(sql);
//            //vulnerabilityInfo v = new vulnerabilityInfo();
//        /*for (int i = 0;i < list2.size();i++){
//            for (int j = 0;j < list1.size();j++){
//                System.out.println(list2.get(i).getDevicetype()+"  "+list1.get(j).getDevice());
//                if (list2.get(i).getDevicetype().contains(list1.get(j).getDevice())){
//                    v.setDevice(list1.get(j).getDevice());
//                    v.setDevicetype(list1.get(j).getDevicetype());
//                    v.setVendor(list1.get(j).getVendor());
//                    v.setHanlvl(list2.get(i).getHanlvl());
//                    v.setTitle(list2.get(i).getTitle());
//                    v.setDescription(list2.get(i).getDescription());
//                    list3.add(v);
//                }
//            }
//            try {
//                Thread.sleep(1);
//            } catch (InterruptedException e) {
//                e.printStackTrace();
//            }
//        }*/
//            List<exploittaskInfo> listex=new ArrayList<>();
//            sql="select * from ExploitResult where IP='"+list1.get(i).getTarget()+"'";
//            mysqlPath="jdbc:mysql://"+databaseConfig.getMysqlip()+"/DeviceMark?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true";
//            connection= DriverManager.getConnection(mysqlPath,"root","123456");
//            exploittaskInfoQuery exploittaskInfoQuery=new exploittaskInfoQuery(connection);
//            listex=exploittaskInfoQuery.queryRecord(sql);
//            connection.close();

//            if (listex.size()>0){
//                for (int p=0;p<listex.size();p++){
//                    vulnerability vv = new vulnerability();
//                    //System.out.println(k+" "+list2.get(p).getDevicetype());
//                    vv.setTaskname(list1.get(i).getTaskname());
//                    vv.setIp(list1.get(i).getTarget());
//                    if (list1.get(i).getDevice().equals("*-*")){
//                        vv.setDevicetype(list1.get(i).getDevicetype());
//                    }
//                    else{
//                        vv.setDevicetype(list1.get(i).getDevice());
//                    }
//                    vv.setVendors(list1.get(i).getVendor());
//                    vv.setTitle(listex.get(p).getExplain());
//                    vv.setTaskdate(listex.get(p).getPostdate());
//                    //System.out.println();
//                    if (!listex.get(p).getExplain().equals("")){
//                        list5.add(vv);
//                    }
//                }
//            }
//        }
//        for (int p = 0; p < list5.size(); p++) {
//            vulnerability vul = list5.get(p);
//            //System.out.println(vul.getDevicetype() + " " + vul.getDescription());
//            for (int q = p+1; q < list5.size(); q++){
//                vulnerability vul1 = list5.get(q);
//                if ((vul.getDevicetype().equals(vul1.getDevicetype())&&vul.getTitle().equals(vul1.getTitle()))||(vul.getDevicetype().equals(vul1.getDevicetype())&&vul.getTitle().contains(vul1.getTitle()))){
//                    list5.remove(list5.get(q));
//                    q--;
//                }
//                else if (vul.getDevicetype().equals(vul1.getDevicetype())&&!vul.getTitle().equals(vul1.getTitle())){
//                    list5.get(p).setTitle(list5.get(p).getTitle()+","+list5.get(q).getTitle());
//                    list5.remove(list5.get(q));
//                    q--;
//                }
//            }
//        }
//
//        RecordFactory recordFactory=new RecordFactory(databaseConfig);
//        Record record=recordFactory.get(DeviceVulRecord.class);
//        for (int j = 0; j < list5.size(); j++) {
//            vulnerability vul = list5.get(j);
//            record.addRecord(vul.getTaskname(),vul.getIp(),vul.getDevicetype(),vul.getVendors(),vul.getTaskdate(),vul.getTitle(),vul.getHanlvl(),vul.getDescription());
//        }
//        recordFactory.getConnection().close();
//
//        return list5;
//    }
//        //无用，可删除
//    public void gene() throws Exception{
//        List<devicetaskInfo> list15=new ArrayList<>();
//        List<vulnerability> list55=new ArrayList<>();
//        String sql="select * from IOTMark";
//        String mysqlPath="jdbc:mysql://"+databaseConfig.getMysqlip()+"/DeviceMark?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true";
//        Connection connection= DriverManager.getConnection(mysqlPath,"root","123456");
//        devicemarktaskQuery devicemarktaskQuery=new devicemarktaskQuery(connection);
//        list15=devicemarktaskQuery.queryRecord(sql);
//        System.out.println(list15.size());
//        System.out.println(sql);
//        for (int i=0;i<list15.size();i++) {
//            List<vulnerability> list2=new ArrayList<>();
//            if (list15.get(i).getDevice().equals("")){
//                list15.get(i).setDevice("*-*");
//            }
//            sql = "select * from Vulinfo where devicetype like '%"+list15.get(i).getDevice()+ "%'";
//            mysqlPath = "jdbc:mysql://" + databaseConfig.getMysqlip() + "/DeviceMark?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true";
//            connection = DriverManager.getConnection(mysqlPath, "root", "123456");
//            vulnerabilityQuery vulnerabilityQuery = new vulnerabilityQuery(connection);
//            list2 = vulnerabilityQuery.queryRecord(sql);
//            connection.close();
//            for (int j = 0; j < list2.size(); j++) {
//                list2.get(j).setTaskname(list15.get(i).getTaskname());
//                list2.get(j).setIp(list15.get(i).getTarget());
//                list2.get(j).setTaskdate(list15.get(i).getPostdate());
//                if (list2.get(j).getDevicetype().contains(" ")){
//                    list2.get(j).setDevicetype(list2.get(j).getDevicetype().split(" ")[0]);
//                }
//                list2.get(j).setTitle(list2.get(j).getTitle().replaceAll("[^\\u4e00-\\u9fa5]", ""));
//            }
//            if (list2.size()>0){
//                for (int p=0;p<list2.size();p++){
//                    if (list15.get(i).getVendor().toLowerCase().equals(list2.get(p).getVendors().toLowerCase())&&list15.get(i).getDevice().toLowerCase().equals(list2.get(p).getDevicetype().toLowerCase())) {
//                        list55.add(list2.get(p));
//                    }
//                }
//            }
//            List<exploittaskInfo> listex=new ArrayList<>();
//            sql="select * from ExploitResult where IP='"+list15.get(i).getTarget()+"'";
//            mysqlPath="jdbc:mysql://"+databaseConfig.getMysqlip()+"/DeviceMark?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true";
//            connection= DriverManager.getConnection(mysqlPath,"root","123456");
//            exploittaskInfoQuery exploittaskInfoQuery=new exploittaskInfoQuery(connection);
//            listex=exploittaskInfoQuery.queryRecord(sql);
//            connection.close();
//            if (listex.size()>0){
//                for (int p=0;p<listex.size();p++){
//                    vulnerability vv = new vulnerability();
//                    vv.setTaskname(list15.get(i).getTaskname());
//                    vv.setIp(list15.get(i).getTarget());
//                    if (list15.get(i).getDevice().equals("*-*")){
//                        vv.setDevicetype(list15.get(i).getDevicetype());
//                    }
//                    else{
//                        vv.setDevicetype(list15.get(i).getDevice());
//                    }
//                    vv.setVendors(list15.get(i).getVendor());
//                    vv.setTitle(listex.get(p).getExplain());
//                    vv.setTaskdate(listex.get(p).getPostdate());
//                    if (!listex.get(p).getExplain().equals("")){
//                        list55.add(vv);
//                    }
//                }
//            }
//        }
//        for (int p = 0; p < list55.size(); p++) {
//            vulnerability vul = list55.get(p);
//            //System.out.println(vul.getDevicetype() + " " + vul.getDescription());
//            for (int q = p+1; q < list55.size(); q++){
//                vulnerability vul1 = list55.get(q);
//                if ((vul.getDevicetype().equals(vul1.getDevicetype())&&vul.getTitle().equals(vul1.getTitle()))||(vul.getDevicetype().equals(vul1.getDevicetype())&&vul.getTitle().contains(vul1.getTitle()))){
//                    list55.remove(list55.get(q));
//                    q--;
//                }
//                else if (vul.getDevicetype().equals(vul1.getDevicetype())&&!vul.getTitle().equals(vul1.getTitle())){
//                    list55.get(p).setTitle(list55.get(p).getTitle()+","+list55.get(q).getTitle());
//                    list55.remove(list55.get(q));
//                    q--;
//
//                }
//            }
//        }
//        RecordFactory recordFactory=new RecordFactory(databaseConfig);
//        Record record=recordFactory.get(DeviceVulRecord.class);
//        for (int j = 0; j < list55.size(); j++) {
//            vulnerability vul = list55.get(j);
//            record.addRecord(vul.getTaskname(),vul.getIp(),vul.getDevicetype(),vul.getVendors(),vul.getTaskdate(),vul.getTitle(),vul.getHanlvl(),vul.getDescription());
//        }
//        recordFactory.getConnection().close();

    }


    @GetMapping("/searchdevicevul")
    public List<searchvulInfo> getdata(String taskname,String IP, String device, String vendor, String title) throws SQLException {
        if(taskname.equals("")&&device.equals("")&&vendor.equals("")&&IP.equals("")&&title.equals(""))return new ArrayList<>();
        List<searchvulInfo> list=new ArrayList<>();

        String sql="select * from DeviceVulTable where ";
        if(!taskname.equals(""))sql=sql+"taskname='"+taskname+"' ";
        if(!IP.equals("")){
            if(!taskname.equals("")) sql=sql+"and IP='"+IP+"' ";
            else sql=sql+"IP='"+IP+"' ";
        }
        if(!title.equals("")){
            if(!taskname.equals("")||!IP.equals("")) sql=sql+"and title='"+title+"' ";
            else sql=sql+"title='"+title+"' ";
        }
        if(!device.equals("")){
            if(!taskname.equals("")||!IP.equals("")||!title.equals("")) sql=sql+"and device='"+device+"' ";
            else sql=sql+"device='"+device+"' ";
        }
        if(!vendor.equals("")){
            if(!taskname.equals("")||!IP.equals("")||!title.equals("")||!device.equals(""))
                sql=sql+"and vendor='"+vendor+"'";
            else
                sql=sql+"vendor='"+vendor+"'";
        }
        String mysqlPath="jdbc:mysql://"+databaseConfig.getMysqlip()+"/DeviceMark?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true";
        java.sql.Connection connection= DriverManager.getConnection(mysqlPath,"root","123456");
        searchvulQuery devicemarktaskQuery=new searchvulQuery(connection);
        list=devicemarktaskQuery.queryRecord(sql);
        connection.close();
        return list;
    }
}
